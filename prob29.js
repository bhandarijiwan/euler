/**
 * Consider all integer combinations of ab for 2 ≤ a ≤ 5 and 2 ≤ b ≤ 5:

22=4, 23=8, 24=16, 25=32
32=9, 33=27, 34=81, 35=243
42=16, 43=64, 44=256, 45=1024
52=25, 53=125, 54=625, 55=3125
If they are then placed in numerical order, with any repeats removed, we get the following sequence of 15 distinct terms:

4, 8, 9, 16, 25, 27, 32, 64, 81, 125, 243, 256, 625, 1024, 3125

How many distinct terms are in the sequence generated by ab for 2 ≤ a ≤ 100 and 2 ≤ b ≤ 100?
 */

function Add(strA, strB) {
  let ma = strA.length > strB.length ? strA.length : strB.length;
  let a = "0".repeat(ma - strA.length) + strA;
  let b = "0".repeat(ma - strB.length) + strB;
  let c = 0;
  let sum = "";
  for (let i = ma - 1; i >= 0; i--) {
    let s = +a.charAt(i) + +b.charAt(i) + c;
    c = s >= 10 ? 1 : 0;
    sum = `${s % 10}${sum}`;
  }
  sum = c ? `${c}${sum}` : sum;
  return sum;
}
function Mult(numA, numB) {
  let strA = `${numA}`;
  let strB = `${numB}`;
  let m = "";
  for (let i = strB.length - 1; i >= 0; i--) {
    let s = "0".repeat(strB.length - 1 - i);
    let f = +strB.charAt(i);
    let c = 0;
    for (let j = strA.length - 1; j >= 0; j--) {
      let p = +strA.charAt(j) * f;
      p += c;
      c = Math.floor(p / 10);
      s = `${p % 10}${s}`;
    }
    s = c ? `${c}${s}` : s;
    m = Add(m, s);
  }
  return m;
}

function countDistinctPowers(a, b) {
  let s = new Set();
  for (let i = a; i <= b; i++) {
    let p = i;
    for (let j = a; j <= b; j++) {
      p = Mult(p, i);
      s.add(p);
    }
  }
  return s.size;
}

(function() {
  console.log(countDistinctPowers(2, 1000));
})();
